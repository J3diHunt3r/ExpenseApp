/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SchoolsImport } from './routes/schools'
import { Route as ExpensesImport } from './routes/expenses'
import { Route as DatafileImport } from './routes/data_file'
import { Route as CreateexpenseImport } from './routes/create_expense'
import { Route as AboutImport } from './routes/about'
import { Route as ChatBotIntegrationImport } from './routes/ChatBotIntegration'
import { Route as IndexImport } from './routes/index'

// Create/Update Routes

const SchoolsRoute = SchoolsImport.update({
  id: '/schools',
  path: '/schools',
  getParentRoute: () => rootRoute,
} as any)

const ExpensesRoute = ExpensesImport.update({
  id: '/expenses',
  path: '/expenses',
  getParentRoute: () => rootRoute,
} as any)

const DatafileRoute = DatafileImport.update({
  id: '/data_file',
  path: '/data_file',
  getParentRoute: () => rootRoute,
} as any)

const CreateexpenseRoute = CreateexpenseImport.update({
  id: '/create_expense',
  path: '/create_expense',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const ChatBotIntegrationRoute = ChatBotIntegrationImport.update({
  id: '/ChatBotIntegration',
  path: '/ChatBotIntegration',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/ChatBotIntegration': {
      id: '/ChatBotIntegration'
      path: '/ChatBotIntegration'
      fullPath: '/ChatBotIntegration'
      preLoaderRoute: typeof ChatBotIntegrationImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/create_expense': {
      id: '/create_expense'
      path: '/create_expense'
      fullPath: '/create_expense'
      preLoaderRoute: typeof CreateexpenseImport
      parentRoute: typeof rootRoute
    }
    '/data_file': {
      id: '/data_file'
      path: '/data_file'
      fullPath: '/data_file'
      preLoaderRoute: typeof DatafileImport
      parentRoute: typeof rootRoute
    }
    '/expenses': {
      id: '/expenses'
      path: '/expenses'
      fullPath: '/expenses'
      preLoaderRoute: typeof ExpensesImport
      parentRoute: typeof rootRoute
    }
    '/schools': {
      id: '/schools'
      path: '/schools'
      fullPath: '/schools'
      preLoaderRoute: typeof SchoolsImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/ChatBotIntegration': typeof ChatBotIntegrationRoute
  '/about': typeof AboutRoute
  '/create_expense': typeof CreateexpenseRoute
  '/data_file': typeof DatafileRoute
  '/expenses': typeof ExpensesRoute
  '/schools': typeof SchoolsRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/ChatBotIntegration': typeof ChatBotIntegrationRoute
  '/about': typeof AboutRoute
  '/create_expense': typeof CreateexpenseRoute
  '/data_file': typeof DatafileRoute
  '/expenses': typeof ExpensesRoute
  '/schools': typeof SchoolsRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/ChatBotIntegration': typeof ChatBotIntegrationRoute
  '/about': typeof AboutRoute
  '/create_expense': typeof CreateexpenseRoute
  '/data_file': typeof DatafileRoute
  '/expenses': typeof ExpensesRoute
  '/schools': typeof SchoolsRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/ChatBotIntegration'
    | '/about'
    | '/create_expense'
    | '/data_file'
    | '/expenses'
    | '/schools'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/ChatBotIntegration'
    | '/about'
    | '/create_expense'
    | '/data_file'
    | '/expenses'
    | '/schools'
  id:
    | '__root__'
    | '/'
    | '/ChatBotIntegration'
    | '/about'
    | '/create_expense'
    | '/data_file'
    | '/expenses'
    | '/schools'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ChatBotIntegrationRoute: typeof ChatBotIntegrationRoute
  AboutRoute: typeof AboutRoute
  CreateexpenseRoute: typeof CreateexpenseRoute
  DatafileRoute: typeof DatafileRoute
  ExpensesRoute: typeof ExpensesRoute
  SchoolsRoute: typeof SchoolsRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ChatBotIntegrationRoute: ChatBotIntegrationRoute,
  AboutRoute: AboutRoute,
  CreateexpenseRoute: CreateexpenseRoute,
  DatafileRoute: DatafileRoute,
  ExpensesRoute: ExpensesRoute,
  SchoolsRoute: SchoolsRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/ChatBotIntegration",
        "/about",
        "/create_expense",
        "/data_file",
        "/expenses",
        "/schools"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/ChatBotIntegration": {
      "filePath": "ChatBotIntegration.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/create_expense": {
      "filePath": "create_expense.tsx"
    },
    "/data_file": {
      "filePath": "data_file.tsx"
    },
    "/expenses": {
      "filePath": "expenses.tsx"
    },
    "/schools": {
      "filePath": "schools.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
